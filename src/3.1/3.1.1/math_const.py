import numpy as np

a = np.array([0, 1, 2, 3, 4])
b = np.array([2, 4, 6, 8, 10])

# 足し算
print(a + b)
print("-" * 30)
print(a + 4)
print("#" * 30)

# 引き算
print(a - b)
print("-" * 30)
print(b - a)
print("-" * 30)
print(a - 4)
print("#" * 30)

# 掛け算(アダマール積)
print(a * b)
print("-" * 30)
print(a * 2)
print("#" * 30)

# 割り算・剰余
print(b / a)
print("-" * 30)
print(b / 2)
print("-" * 30)
print(b / 3)
print("-" * 30)
print(b // 3)
print("-" * 30)
print(b % 3)
print("-" * 30)
print(np.mod(b, 3))
print("#" * 30)

# 累乗(np.power)・平方根(np.sqrt)
print(2 ** 3)
print("-" * 30)
print(np.power(2, 3))
print("-" * 30)
a = np.arange(1, 11, 1)
b = np.array([1, 2, 1, 2, 1, 2, 1, 2, 1, 2])
print(a)
print("-" * 30)
print(b)
print("-" * 30)
print(np.power(a, b))
print("-" * 30)
print(a ** b)
print("-" * 30)
print(np.sqrt(2))
print("-" * 30)
print(2 ** 0.5)
print("-" * 30)
print(np.sqrt(a))
print("#" * 30)

# 三角関数(np.sin, np.cos, np.tan)
print(np.sin(0))
print("-" * 30)
print(np.cos(0))
print("-" * 30)
print(np.tan(0))
print("-" * 30)
print(np.sin(np.pi * 0.5))
print("-" * 30)
print(np.cos(np.pi * 0.5))
print("-" * 30)
print(np.tan(np.pi * 0.5))
print("-" * 30)
print(np.sin(1))
print("-" * 30)
print(np.cos(1))
print("-" * 30)
print(np.tan(1))
print("#" * 30)

# 逆三角関数(np.arcsin, np.arccos, np.arctan)
print(np.arcsin(0.5))
print("-" * 30)
print(np.arccos(0.5))
print("-" * 30)
print(np.arctan(1.0))
print("-" * 30)
print(np.arcsin(-1.0))
print("-" * 30)
print(np.arccos(-1.0))
print("-" * 30)
print(np.arctan(-0.5))
print("#" * 30)

# ラジアンと度の相互変換
print(np.radians(120))
print("-" * 30)
print(np.deg2rad(120))
print("-" * 30)
print(np.rad2deg(3.14))
print("-" * 30)
print(np.deg2rad(np.rad2deg(2.3)))
print("#" * 30)

# 指数関数
print(np.exp(1))
print("-" * 30)
print(np.exp(2))
print("-" * 30)
print(np.exp(0))
print("#" * 30)

# 対数関数
print(np.log(np.e))
print("-" * 30)

a = np.array([1., 2., np.e ** 2, 10])
print(np.log(a))
print("-" * 30)

b = np.array([1., 2., 4., 7., ])
print(np.log2(b))
print("-" * 30)

c = np.array([1., 10., 20., 100])
print(np.log10(c))
print("-" * 30)

print(np.log1p(a))
print("#" * 30)

# log4(2)
print(np.log(2) / np.log(4))
print("-" * 30)

print(np.log(9) / np.log(3))
print("-" * 30)

# 双曲線関数
print(np.sinh(2))
print("-" * 30)
print(np.cosh(2))
print("-" * 30)
print(np.tanh(2))
print("-" * 30)
print(np.sinh(-1))
print("-" * 30)
print(np.cosh(-1))
print("-" * 30)
print(np.tanh(-1))
print("-" * 30)
print(np.arcsinh(2))
print("-" * 30)
print(np.arccosh(1))
print("-" * 30)
print(np.arctanh(0.7))
print("#" * 30)

# 切り捨て、切り上げ、四捨五入
# 切り捨てnp.floor()
# 切り捨てnp.trunc()
# 切り上げnp.ceil()
# 四捨五入np.round()
# 四捨五入np.around()
# 四捨五入np.rint()
# 0に近い方向で整数をとるnp.fix()
a = np.array([-1.8, -1.4, -1.0, -0.6, -0.2, 0., 0.2, 0.6, 1.0, 1.4, 1.8])
print(np.floor(a))
print("-" * 30)
print(np.trunc(a))
print("-" * 30)
print(np.ceil(a))
print("-" * 30)
print(np.round(a))
print("-" * 30)
print(np.around(a))
print("-" * 30)
print(np.rint(a))
print("-" * 30)
print(np.fix(a))
print("#" * 30)

# 複素数
a = 1 + 2j
b = -2 + 1j
print(np.real(a))
print("-" * 30)
print(np.imag(a))
print("-" * 30)
print(a + b)
print("-" * 30)
print(a * b)
print("-" * 30)
print(a / b)
print("-" * 30)
print(np.conj(a))
print("#" * 30)

# 絶対値
a = -2.5
print(np.absolute(a))
print("-" * 30)
print(np.fabs(a))
print("-" * 30)

b = -2 + 3j
print(np.abs(b))
print("#" * 30)

# 数学的な定数の呼び出し
print(np.e)
print("-" * 30)
print(np.pi)
print("#" * 30)
